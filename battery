#!/bin/bash

color100p="\033[0;32m"
color60p="\033[0;33m"
color20p="\033[0;31m"
color_charge="\033[0;36m"

colors=false 
live=false 
minimal=false

while getopts ":hclm" option; do
      case $option in
    c)
        colors=true
        ;;
    l)
        live=true
        ;;
    m)
        minimal=true
        ;;
    h)
        echo "Usage:" 
        echo "  battery [-cl]"
        echo " "
        echo "OPTIONS"
        echo "  -c   Add colors"
        echo "  -l   Monitor the battery live"
        exit 0
        ;;
    esac
done

function cleanup() {
    tput reset
}

if [[ $live == true ]] && [[ $minimal == false ]]; then
    trap cleanup EXIT
fi

megaintdent () {
i=0

while [ $i -le $1 ]; do 
	printf " "
	((i++))
done	

}

batpiece () {
i=0

printf "██"

while [ $i -le 100 ]; do
	if [ $i -le $blocks ]; then
		printf "${battery_color}█${NC}"
	else
		printf " "
	fi

	((i+=3))
done

if [ $1 -eq 0 ]; then
	printf "████"
else 
	printf "████████"
fi

}

printbat () {
    megaintdent $indent 
    printf "████████████████████████████████████████\n"

    megaintdent $indent
    batpiece 0
    echo " " 

    megaintdent $indent
    batpiece 1
    echo " "
    megaintdent $indent
    batpiece 1

    if [ $charging -eq 1 ]; then	
        printf "       ${charge_color}████████${NC}"
    fi
    echo " "			
    megaintdent $indent
    batpiece 1

    if [ $charging -eq 1 ]; then	
        printf "    ${charge_color}████████${NC}"
    fi
    echo " "

    megaintdent $indent
    batpiece 1
    echo " "

    megaintdent $indent
    batpiece 0
    echo " "

    megaintdent $indent
    printf "████████████████████████████████████████\n"
}

quit? () {
    read -sn 1 -t 0.1 quit 
    if [ "$quit" = "q" ] || [ "$quit" = $'\e' ]; then 
        return 1
    fi

    return 0
}

bat=$(upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep -E '[[:digit:]]{1,}%' | tr -dc 0-9)
let blocks=$bat/3*3
upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep 'discharging' > /dev/null
charging=$?

if [[ $minimal == true ]]; then
    echo "Battery: $bat%"
    echo "Charging: $charging"
    exit 0
fi

previous_bat=0
previous_charge=0
rows=0
cols=0

while [ 0 ]
do
    if [[ "$previous_charge" == "$charging" ]] && [[ "$previous_bat" == "$bat" ]] && [[ $(tput lines) == "$rows" ]] && [[ $(tput cols) == "$cols" ]]; then
        quit? || break

        previous_bat=$bat
        previous_charge=$charging

        bat=$(upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep -E '[[:digit:]]{1,}%' | tr -dc 0-9)
        let blocks=$bat/3*3
        upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep 'discharging' > /dev/null
        charging=$?

        continue
    fi

    clear

    battery_color='\033[0m'
    charge_color='\033[0m'
    NC='\033[0m'

    rows=$(tput lines)
    cols=$(tput cols)

    let rows=$rows newl=rows/2-3

    i=0

    while [ $i -le $newl ]; do 
        printf "\n"
        ((i++))
    done 

    let cols=$cols indent=cols/2-28

    if [[ $colors == true ]]; then 
        battery_color=$color100p
        charge_color=$color_charge
    
        if [ $bat -lt 60 ]; then
            battery_color=$color60p
        fi

        if [ $bat -lt 20 ]; then
            battery_color=$color20p
        fi
    fi

    printbat

    i=0
    while [ $i -le $newl ]; do 
        printf "\n"
        ((i++))
    done

    previous_bat=$bat
    previous_charge=$charging

    bat=$(upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep -E '[[:digit:]]{1,}%' | tr -dc 0-9)
    let blocks=$bat/3*3
    upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep 'discharging' > /dev/null
    charging=$?

    if [[ $live == false ]]; then
        break
    fi

    tput civis

    quit? || break

done
